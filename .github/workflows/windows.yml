name: windows

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

defaults:
  run:
    shell: msys2 {0}

jobs:
  should_run:
    runs-on: ubuntu-latest
    name: should_i_run
    outputs:
      output1: ${{ steps.check.outputs.target_commit_id }}
    steps:
     - name: check
       run: |
         wget https://gist.github.com/mgood7123/47957c59a4b0cbda11875632ee0b8f15/raw/d46dfa18d83c7aa4185f2b949608dafe674a3db7/check.cpp -O check.cpp
         cat << EOF > json.cpp
         const char * json_data = R"(
             ${{toJSON(github.event.commits.*)}}
         )";
         EOF
         git clone https://github.com/danielaparker/jsoncons --depth=1
         g++ --std=c++17 -I jsoncons/include check.cpp json.cpp -o check
         ./check 2 >> "$GITHUB_OUTPUT" # check for android [1] windows [2] linux [3] macos [4]
  
  build:
    needs: should_run
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
      cancel-in-progress: true
    strategy:
      matrix:
        include:
          - os: windows-latest
            name: windows
            sys: clang64

    runs-on: ${{ matrix.os }}

    name: ${{ matrix.name }}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          ref: ${{needs.should_run.outputs.output1}}
          submodules: recursive

      - name: '${{ matrix.icon }} Setup MSYS2'
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.sys}}
          update: true

      - name: update packages
        run: |
          echo "github.event.head_commit.message = '${{github.event.head_commit.message}}'"
          echo "endsWith(github.event.head_commit.message, '- android') = ${{ endsWith(github.event.head_commit.message, '- android') }}"
          echo "endsWith(github.event.head_commit.message, '- windows') = ${{ endsWith(github.event.head_commit.message, '- windows') }}"
          echo "endsWith(github.event.head_commit.message, '- linux') = ${{ endsWith(github.event.head_commit.message, '- linux') }}"
          echo "endsWith(github.event.head_commit.message, '- macos') = ${{ endsWith(github.event.head_commit.message, '- macos') }}"
          echo "(! endsWith(github.event.head_commit.message, '- android') && endsWith(github.event.head_commit.message, '- windows') && ! endsWith(github.event.head_commit.message, '- linux') && ! endsWith(github.event.head_commit.message, '- macos')) = ${{ (! endsWith(github.event.head_commit.message, '- android') && endsWith(github.event.head_commit.message, '- windows') && ! endsWith(github.event.head_commit.message, '- linux') && ! endsWith(github.event.head_commit.message, '- macos')) }}"
          echo "(! endsWith(github.event.head_commit.message, '- android') && endsWith(github.event.head_commit.message, '- windows') && ! endsWith(github.event.head_commit.message, '- linux') && ! endsWith(github.event.head_commit.message, '- macos')) || true = ${{ (! endsWith(github.event.head_commit.message, '- android') && endsWith(github.event.head_commit.message, '- windows') && ! endsWith(github.event.head_commit.message, '- linux') && ! endsWith(github.event.head_commit.message, '- macos')) || true }}"
          pacman -Sy

      - name: install pacboy
        run: |
          pacman -Syu --noconfirm --needed pactoys

      - name: update packages
        run: |
          pacboy -Sy

      - name: install packages
        run: |
          pacboy -S --noconfirm --needed clang:p make:p cmake:p autotools:p

      - name: cmake build
        run: |
          mingw32-make CC=clang CXX=clang++ CMAKE_FLAGS="-DCMAKE_MAKE_PROGRAM=mingw32-make"

      # - uses: actions/upload-artifact@v3
      #   with:
      #     name: program-windows.exe
      #     path: ./program-windows.exe
      #     retention-days: 1
